[{"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\App.js":"1","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\index.js":"2","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\BookList.jsx":"3","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\AddBook.jsx":"4","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\queries\\queries.js":"5","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\BookDetail.jsx":"6","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\Modal.jsx":"7"},{"size":761,"mtime":1609009067773,"results":"8","hashOfConfig":"9"},{"size":219,"mtime":1609009480259,"results":"10","hashOfConfig":"9"},{"size":1750,"mtime":1609100869763,"results":"11","hashOfConfig":"9"},{"size":1997,"mtime":1609008442892,"results":"12","hashOfConfig":"9"},{"size":1008,"mtime":1608983037766,"results":"13","hashOfConfig":"9"},{"size":979,"mtime":1609019184370,"results":"14","hashOfConfig":"9"},{"size":1106,"mtime":1609019070397,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cnpbvq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\App.js",[],"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\index.js",[],["34","35"],"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\BookList.jsx",[],"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\AddBook.jsx",["36","37"],"import React, { useState } from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  getAuthorsQuery,\r\n  addBookMutation,\r\n  getBooksQuery,\r\n} from \"../queries/queries\";\r\n\r\nconst AddBook = () => {\r\n  const { loading, error, data } = useQuery(getAuthorsQuery);\r\n  const [addTodo, { upData }] = useMutation(addBookMutation);\r\n\r\n  const [authorID, setAuthorID] = useState(\"\");\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [bookGenre, setBookGenre] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setAuthorID(e.target.value);\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTodo({\r\n      variables: { name: bookName, genre: bookGenre, authorId: authorID },\r\n      refetchQueries: [{ query: getBooksQuery }],\r\n    });\r\n    setBookName(\"\");\r\n    setBookGenre(\"\");\r\n    setAuthorID(\"\");\r\n  };\r\n\r\n  const loaddata = () => {\r\n    if (loading) {\r\n      return <option>Loading books...</option>;\r\n    } else {\r\n      return data.authors.map((authors) => {\r\n        return (\r\n          <option value={authors.id} key={authors.id}>\r\n            {authors.name}\r\n          </option>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"formWrap\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Book name:\"\r\n          type=\"text\"\r\n          value={bookName}\r\n          onChange={(e) => setBookName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          placeholder=\"Genre:\"\r\n          type=\"text\"\r\n          value={bookGenre}\r\n          onChange={(e) => setBookGenre(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <select\r\n          name=\"authors\"\r\n          onChange={handleChange}\r\n          value={authorID}\r\n          required\r\n        >\r\n          =<option>Choose author</option>\r\n          {loaddata()}\r\n        </select>\r\n        <button type=\"submit\">Přidat novou knihu</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\queries\\queries.js",[],["38","39"],"C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\BookDetail.jsx",["40"],"import React  from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getBookQuery } from \"../queries/queries\";\r\n\r\nconst BookDetail = ({ selectedID,setIsLoad }) => {\r\n  const { loading, error, data } = useQuery(getBookQuery, {\r\n    variables: { id: selectedID },\r\n  });\r\n\r\n  const loaddata = () => {  \r\n   \r\n    if (loading) {\r\n      return <p>Loading book...</p>;\r\n    } else {\r\n   const { book } =  data;\r\n      return (\r\n        <>\r\n          <h2>{book.name}</h2>\r\n          <p>{book.genre}</p>\r\n          <p>{book.author.name}</p>\r\n          <p>All books by this author:</p>\r\n          <ul className=\"other-books\">\r\n            {book.author.books.map((item) => {\r\n              return (\r\n                <li className=\"detailList\" key={item.id}>\r\n                  {item.name} \r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </>\r\n      );\r\n    } \r\n  };\r\n\r\n  return <div>{ loaddata()}</div>;\r\n};\r\n\r\nexport default BookDetail;\r\n","C:\\Users\\Josef Ševčík\\Desktop\\bookApp\\graphqlclient\\src\\components\\Modal.jsx",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":20,"nodeType":"48","messageId":"49","endLine":10,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":11,"column":21,"nodeType":"48","messageId":"49","endLine":11,"endColumn":27},{"ruleId":"42","replacedBy":"51"},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","severity":1,"message":"47","line":6,"column":20,"nodeType":"48","messageId":"49","endLine":6,"endColumn":25},{"ruleId":"46","severity":1,"message":"53","line":31,"column":8,"nodeType":"48","messageId":"49","endLine":31,"endColumn":14},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'upData' is assigned a value but never used.",["54"],["55"],"'isLoad' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]